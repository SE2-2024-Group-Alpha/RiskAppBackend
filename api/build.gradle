plugins {
	id 'java'
	id 'org.springframework.boot' version '3.2.3'
	id 'io.spring.dependency-management' version '1.1.4'
	id 'jacoco-report-aggregation'
	id 'org.sonarqube' version '5.0.0.4638'
}

group = 'se2.alpha'
version = '0.0.1-SNAPSHOT'

java {
	sourceCompatibility = '17'
}

bootJar {
	archiveFileName = 'riskbackend.jar'
}

repositories {
	mavenCentral()
}

dependencies {
	implementation 'mysql:mysql-connector-java:8.0.30'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-security'
	implementation 'io.jsonwebtoken:jjwt-api:0.11.5'
	implementation 'io.jsonwebtoken:jjwt-impl:0.11.5'
	implementation 'io.jsonwebtoken:jjwt-jackson:0.11.5'
    implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.4.0'
	implementation 'org.springframework.boot:spring-boot-starter-websocket'
	implementation 'org.springframework.boot:spring-boot-starter-security'
	implementation 'org.projectlombok:lombok:1.18.30'
	implementation 'com.google.code.gson:gson:2.10'
	compileOnly 'org.projectlombok:lombok:1.18.30'
	annotationProcessor 'org.projectlombok:lombok:1.18.30'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
}

tasks.named('test') {
	useJUnitPlatform()
}

tasks.named('check') {
	dependsOn tasks.named('testCodeCoverageReport', JacocoReport)
}
jacocoTestReport {
	reports {
		xml.required = true
	}
}
sonar {
	properties {
		property 'sonar.host.url', 'https://sonarcloud.io'
		property 'sonar.token', 'sqp_1a1e73ab2e4cd140a9f75e7983086832c02e8189'
		property 'sonar.projectKey', 'riskappbackend'
		property 'sonar.organization', 'SE2-2024-Group-Alpha'
	}
}